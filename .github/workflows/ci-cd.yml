name: CI/CD Pipeline

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]

permissions:
  contents: write
  actions: read
  checks: write

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version: [7.4, 8.0, 8.1, 8.2, 8.3]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: curl, json
          coverage: xdebug

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run code style checks
        run: |
          if [ -f "./vendor/bin/php-cs-fixer" ]; then
            ./vendor/bin/php-cs-fixer fix --dry-run --diff
          else
            echo "PHP CS Fixer not installed, skipping code style check"
          fi

      - name: Run static analysis
        run: |
          if [ -f "./vendor/bin/phpstan" ]; then
            ./vendor/bin/phpstan analyse
          else
            echo "PHPStan not installed, skipping static analysis"
          fi

      - name: Run tests
        run: ./vendor/bin/phpunit --coverage-clover coverage.xml

      - name: Upload coverage to Codecov
        if: matrix.php-version == '8.1'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: false

  validate:
    name: Validate Package
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: curl, json

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Validate autoloading
        run: composer dump-autoload --optimize --strict-psr

      - name: Check package syntax
        run: find src -name "*.php" -exec php -l {} \;

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run security audit
        run: |
          if [ -f "./vendor/bin/security-checker" ]; then
            ./vendor/bin/security-checker security:check
          else
            echo "Security checker not installed, skipping security audit"
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        continue-on-error: true
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## What's Changed

            See [CHANGELOG.md](https://github.com/xtrella/aluvia-php/blob/main/CHANGELOG.md) for detailed changes.

            ## Installation

            ```bash
            composer require xtrella/aluvia-php-sdk:${{ github.ref_name }}
            ```

            ## Documentation

            Visit our [GitHub repository](https://github.com/xtrella/aluvia-php) for complete documentation and examples.
          draft: false
          prerelease: false
